#!/usr/bin/env bash

#-- ウィンドウのタイトル --#
window_text="パッケージ GUI Installer"



#-- ウィンドウのアイコン --#
#
#=================================================================#
# svgもしくはpngが使用できます。必ずフルパスで記述してください。
#=================================================================#
#
window_icon="/usr/share/pixmaps/archlinux.png"



#-- スクリプトディレクトリ --#
#
#=================================================================#
# 各ソフトウェアのインストール情報などが書かれたスクリプトが入っているディレクトリです。
# ディレクトリ内にはパッケージのスクリプト以外はいれないでください（正常に実行できません）
# スクリプトと同じディレクトリを指定する場合は${current_dir}が使用できます。
#=================================================================#
#
script_dir="${current_dir}/softwares"



#-- パッケージがインストールされているかを確認するスクリプト --#
#
#=================================================================#
# ディストリビューションに依存するため、設定で定義します。
# pacman用とdpkg用が用意されており、デフォルトではpacmanが有効化されています。
# どちらでもない場合は各自でcheck_pkg関数を作成してください。
# pacman以外を有効化する場合は、pacmanをコメントアウトしてください。
# 
# 関数の仕様
# 存在するならprintfでを、存在しないならprintfで1を返してください。
# 引数にはパッケージ名が1つ渡されます。
#=================================================================#
#
# pacman用
check_pkg(){ if [[ -n $(pacman -Q | awk '{print $1}' | grep -x $1) ]]; then printf 0; else printf 1; fi; }
# 
# dpkg用
# check_pkg(){ if [[ -n $(dpkg --get-selections | awk '{print $1}' | grep -x $1) ]]; then printf 0; else printf 1; fi; }



#--- データベースをアップデートするスクリプト ---#
#
#=================================================================#
# apt-get update やpacman -Syyに相当するコマンドを記述してください
#=================================================================#
#
# pacman用
update_db(){ pacman -Syy --noconfirm; }
#
# dpkg、apt用
# update_db(){ apt-get --yes update; }



#--- パッケージをアップグレードするスクリプト ---#
#
#=================================================================#
# apt-get update やpacman -Syyに相当するコマンドを記述してください
#=================================================================#
#
# pacman用
upgrade_pkg(){ pacman -Syu --noconfirm; }
#
# dpkg、apt用
# upgrade_pkg(){ apt-get --yes update; apt-get --yes upgrade; }